name: sap explorer CI/CD Pipeline 

on:
  push:
    branches:
      - main
env:
  AWS_REGION: us-east-1
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: my-repo
      
      - name: Verify Directory Structure
        run: |
         ls -R my-repo
         pwd
         echo "===================================="
         cd my-repo
         pwd
         ls -xlt

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build JAR
        run: |
          cd my-repo
          ls -xlt
          pwd
          cd backend/sap_explorer
          mvn clean package -DskipTests
        #working-directory: $(pwd)/backend/sap-explorer

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        env:
          AWS_DEFAULT_REGION:
          AWS_ACCESS_KEY_ID:
          AWS_SECRET_ACCESS_KEY:
          AWS_SESSION_TOKEN:
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to AWS ECR
        run: |
          echo ${{ env.AWS_ACCESS_KEY_ID }}
          echo ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URI }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.AWS_ECR_URI }}/sapexplorer:latest .
          docker push ${{ secrets.AWS_ECR_URI }}/sapexplorer:latest

  
      - name: Apply Kubernetes Manifests
        run: |
          cd my-repo
          ls -xlt
          pwd
          kubectl apply -f k8s/
